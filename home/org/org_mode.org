#+STARTUP: showall
#+TITLE: Notes for org-mode


* shortcuts
  - C-c C-x \ : runs the command org-toggle-pretty-entities

* Math/Latex
** superscript/subscript, square root
  If $a^2=b$ and \( b=2 \), then the solution must be
  either $$ a=+\sqrt{2} $$ or \[ a=-\sqrt{2} \].

** Matix
\begin{matrix}
 a & b \\
 c & d \\
\end{matrix}

\begin{pmatrix} 
  \alpha     & \beta^{*}\\ 
  \gamma^{*} & \delta 
\end{pmatrix}

\begin{bmatrix} 
  \alpha     & \beta^{*}\\ 
  \gamma^{*} & \delta 
\end{bmatrix}


$X =
\begin{array}{cc}
x & y \\
z & w \\
\end{array}$


$M = \left( \begin{smallmatrix} a&b\\ c&d \end{smallmatrix} \right)$

- matrix: unbracketed matrix
- pmatrix: matrix surrounded by parentheses
- bmatrix: matrix surrounded by square brackets
- vmatrix: matrix surrounded by single vertical lines
- Vmatrix: matrix surrounded by double vertical lines

** '\|' for ||
   $\|a\|$^{2} = a * a

* work with images on Windows

#+BEGIN_EXAMPLE

I'm glad to hear that it's working now! Besides adding the debugging messages, the main changes I made to the function were:

1. **Escaping Backslashes**: Ensuring that backslashes in file paths are properly escaped. This is important for Windows file paths in Emacs Lisp. For example, I replaced `/` with `\\` in the `replace-regexp-in-string` function.

2. **Concatenation of Strings**: Making sure that the `concat` function is used correctly to concatenate strings, especially when constructing the `filename` and the command string.

Here is the revised function with the changes highlighted:

```elisp
(defun org-screenshot ()
  "Take a screenshot into a time stamped unique-named file in the same 
directory as the org-buffer and insert
a link to this file."
  (interactive)
  (create-directory-if-not-exists org-download-image-dir)

  (setq tilde-buffer-filename
        (replace-regexp-in-string "/" "\\\\" (buffer-file-name) t t)) ;; Escaping backslashes
  (setq filename
        (concat
         (make-temp-name
          (concat org-download-image-dir
                  "_"
                  (format-time-string "%Y%m%d_%H%M%S_"))) ".jpg")) ;; Correct concatenation
  ;; Debugging: Print the filename to the *Messages* buffer
  (message "Saving screenshot to: %s" filename)

  ;; Linux: ImageMagick: (call-process "import" nil nil nil filename)

  ;; (shell-command "powershell.exe snippingtool /clip")
  (my-org-download-set-dir)
  (org-download-screenshot)
  ;; Windows: Irfanview
  (let ((command (concat "C:\\Users\\axu\\bin\\iview467_x64\\i_view64.exe /clippaste /convert=\"" filename "\""))) ;; Correct concatenation
    ;; Debugging: Print the command to the *Messages* buffer
    (message "Executing command: %s" command)
    (call-process-shell-command command))
  (insert (concat "[[file:" filename "]]"))
  (org-display-inline-images))
```

These changes ensure that the file paths are correctly formatted and that the command to save the image is constructed properly. If you have any more questions or need further assistance, feel free to ask!
#+END_EXAMPLE
